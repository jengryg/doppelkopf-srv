"""
A moment in time that is uniquely identified using the ISO-8601 instant format.
Example: 2011-12-03T10:15:30Z
"""
scalar Instant

"""
All queries this graphQL API supports.
"""
type Query {
    game(id: ID!) : Game!
    games: [Game!]!
}

"""
All mutations this graphQL API supports.
"""
type Mutation {
    createGame(createGameInput: CreateGameInput!): Game!
    startGame(id: ID!): Game!
}

"""
Object metadata that tracks when an object was created and updated.
"""
type CreatedUpdated {
    """
    The object was created at this moment.
    """
    created: Instant!

    """
    The object was updated the last time at this moment.
    """
    updated: Instant!
}

"""
Object metadata that tracks when an object was started and ended.
"""
type StartedEnded {
    """
    The game was started at this moment. If this is null, the game was not started yet.
    """
    started: Instant

    """
    The game was ended at this moment. If this is null, the game was not ended yet.
    """
    ended: Instant
}

"""
Send this to create a new game.
"""
input CreateGameInput {
    """
    How many players are at most allowed to join the game.
    """
    playerLimit: Int!
}

"""
Information about a game of Doppelkopf.
"""
type Game {
    """
    "The UUID of this game."
    """
    id: ID!

    """
    How many players are at most allowed to join this game.
    """
    playerLimit: Int!

    """
    The created and updated meta data of this game.
    """
    cu: CreatedUpdated!

    """
    The started and ended moments of this game.
    """
    se: StartedEnded!
}