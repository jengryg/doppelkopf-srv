server:
  port: 8080
  shutdown: graceful

spring:
  application:
    name: "Doppelkopf"
  main:
    banner-mode: off
  jackson:
    serialization:
      indent-output: true
  liquibase:
    # Disable liquibase by default in this configuration.
    # This value should be explicitly overridden in the corresponding profiles if necessary.
    enabled: false
  jpa:
    hibernate:
      # This value should be explicitly overridden in the corresponding profiles if necessary.
      ddl-auto: none
    database: postgresql
  mvc:
    problemdetails:
      enabled: true
  graphql:
    graphiql:
      enabled: false
    schema:
      printer:
        # by default the endpoint that prints the schema should be disabled
        # we enable it only for development purposes in the profile specific configurations
        enabled: false

management:
  endpoints:
    web:
      exposure:
        include:
          - "health"
          - "info"
          - "openapi"
          - "swaggerui"
    jmx:
      exposure:
        include:
          - "health"
          - "info"
    access:
      # Prevent leaking sensitive actuator endpoints unless explicitly configured in this configuration.
      default: none
  health:
    defaults:
      enabled: false
    db:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
      access: none

logging:
  pattern:
    # Explicitly define the default console log pattern here.
    # We add `%kvp` to the default pattern before the message to include SLF4J fluent api key-value pairs.
    console: >-
      %clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd'T'HH:mm:ss.SSSXXX}}){faint} 
      %clr(${LOG_LEVEL_PATTERN:%5p}) 
      %clr(${PID: }){magenta} 
      %clr(---){faint} 
      %clr([%15.15t]){faint} 
      %clr(%-40.40logger{39}){cyan} 
      %clr(:){faint} 
      %kvp
      %m%n
      ${LOG_EXCEPTION_CONVERSION_WORD:%wEx}

app:
  common:
    # The stage identifier of the project.
    # This must be overwritten in the application-{stage}.yml specific files or injected through your deployment process.
    stage: "[overwrite this value]"
    # The version of the project should be set during the build process.
    # TODO: use ant-filter in gradle build to process this file and set the version from gradle build
    version: "[overwrite this value]"
  meta:
    api:
      title: "Doppelkopf"